#!/usr/bin/env python3

"""
Seed script to populate the database with initial lessons data
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database import SessionLocal
from app import models

def create_sample_lessons():
    db = SessionLocal()
    
    # Check if lessons already exist
    existing_lessons = db.query(models.Lesson).count()
    if existing_lessons > 0:
        print(f"Database already has {existing_lessons} lessons. Skipping seed.")
        return
    
    lessons_data = [
        {
            "title": "üöÄ [FROM DATABASE] Stock Market Fundamentals",
            "description": "Master the core concepts of financial markets",
            "content": "Stock markets are venues where buyers and sellers meet to exchange equity shares of public corporations...",
            "xp_reward": 175,
            "order_index": 1,
            "category": "basics"
        },
        {
            "title": "ü§ñ [FROM DATABASE] AI Trading Systems", 
            "description": "Build intelligent automated trading bots",
            "content": "Algorithmic trading uses computer programs to execute trades based on predefined criteria...",
            "xp_reward": 250,
            "order_index": 2,
            "category": "advanced"
        },
        {
            "title": "üõ°Ô∏è [FROM DATABASE] Portfolio Protection",
            "description": "Advanced risk mitigation strategies",
            "content": "Risk management is the process of identifying, analyzing and accepting or mitigating uncertainty in investment decisions...",
            "xp_reward": 190,
            "order_index": 3,
            "category": "strategy"
        },
        {
            "title": "üìä [FROM DATABASE] Chart Pattern Mastery",
            "description": "Professional technical analysis techniques",
            "content": "Technical analysis is a method of evaluating securities by analyzing statistics generated by market activity...",
            "xp_reward": 275,
            "order_index": 4,
            "category": "analysis"
        },
        {
            "title": "üíé [FROM DATABASE] Options Trading Pro",
            "description": "Advanced derivatives and options strategies",
            "content": "Options trading involves contracts that give you the right to buy or sell assets at specific prices...",
            "xp_reward": 300,
            "order_index": 5,
            "category": "advanced"
        }
    ]
    
    for lesson_data in lessons_data:
        lesson = models.Lesson(**lesson_data)
        db.add(lesson)
    
    db.commit()
    print(f"Created {len(lessons_data)} lessons successfully!")
    db.close()

if __name__ == "__main__":
    create_sample_lessons()
